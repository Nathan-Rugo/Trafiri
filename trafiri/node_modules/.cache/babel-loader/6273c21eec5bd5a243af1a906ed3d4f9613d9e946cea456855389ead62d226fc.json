{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rugog\\\\Documents\\\\CoDeAnDpRoJeCtS\\\\Nathan-Rugo\\\\Trafiri\\\\trafiri\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// Login component. It sends a POST request to the server with the user's email and password. If the user is successfully logged in, the server sends back the user's data, which is then stored in the UserContext. The user is then redirected to the home page. If the login fails, an error message is displayed.\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { UserContext } from '../contexts/UserContext'; // Adjust the path accordingly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // State variables to store the user's email, password, and error message\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    setUser\n  } = useContext(UserContext);\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  // Function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Send a POST request to the server with the user's email and password\n      const response = await axios.post('http://localhost:3001/login', {\n        email,\n        password\n      });\n      // If the response status is 200, the user is successfully logged in\n      if (response.status === 200) {\n        setUser(response.data.user);\n        navigate('/');\n      } else {\n        setMessage('Login failed');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessage('Failed to fetch. Check if you have typed the correct credentials');\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // Login form with email, password input fields, and a submit button\n    _jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message ? 'message error' : 'hidden',\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email address\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter your password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Do not have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/register\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Forgot password? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/reset\",\n            children: \"Reset password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(Login, \"LoqYbPYL+WLQmNmu4jn0dtDCZFg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","axios","UserContext","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","setUser","message","setMessage","navigate","handleSubmit","e","preventDefault","response","post","status","data","user","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","href","_c","$RefreshReg$"],"sources":["C:/Users/rugog/Documents/CoDeAnDpRoJeCtS/Nathan-Rugo/Trafiri/trafiri/src/components/Login.js"],"sourcesContent":["// Login component. It sends a POST request to the server with the user's email and password. If the user is successfully logged in, the server sends back the user's data, which is then stored in the UserContext. The user is then redirected to the home page. If the login fails, an error message is displayed.\r\nimport React, { useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../contexts/UserContext'; // Adjust the path accordingly\r\n\r\nconst Login = () => {\r\n    // State variables to store the user's email, password, and error message\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const { setUser } = useContext(UserContext);\r\n    const [message, setMessage] = useState('');\r\n    const navigate = useNavigate();\r\n    // Function to handle form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            // Send a POST request to the server with the user's email and password\r\n            const response = await axios.post('http://localhost:3001/login', { email, password });\r\n            // If the response status is 200, the user is successfully logged in\r\n            if (response.status === 200) {\r\n                setUser(response.data.user);\r\n                navigate('/');\r\n            } else {\r\n                setMessage('Login failed');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setMessage('Failed to fetch. Check if you have typed the correct credentials');\r\n        }\r\n    };\r\n\r\n    return (\r\n        // Login form with email, password input fields, and a submit button\r\n        <div className=\"login-container\">\r\n            <h1>Login</h1>\r\n            <div className={message ? 'message error' : 'hidden'}>{message}</div>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Email</label>\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Enter your email address\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                />\r\n                <label>Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Login</button>\r\n                <p>Do not have an account? <a href=\"/register\">Sign up</a></p>\r\n                <p>Forgot password? <a href=\"/reset\">Reset password</a></p>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}