{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rugog\\\\Documents\\\\CoDeAnDpRoJeCtS\\\\Nathan-Rugo\\\\Trafiri\\\\trafiri\\\\src\\\\components\\\\Reset.js\",\n  _s = $RefreshSig$();\n// Reset password component that allows users to reset their password by providing their email address and new password. \n// The component sends a POST request to the server with the email and password, and if the request is successful, the user is redirected to the login page. \n// If the request fails, an error message is displayed.\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reset = () => {\n  _s();\n  // State variables to store the user's email, password, and confirm password values, as well as the message to display to the user\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  // Function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Check if passwords match\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n      return;\n    }\n    // User data to send to the server\n    const userData = {\n      email,\n      password\n    };\n    try {\n      // Send reset request to server\n      const response = await axios.post('http://localhost:3001/reset', userData);\n      if (response.status === 200) {\n        setMessage('Password reset successful');\n        setTimeout(() => {\n          navigate('/login');\n        }, 2000); // Redirect after 2 seconds\n      } else {\n        setMessage(`Password reset failed: ${response.data.message}`);\n      }\n    } catch (error) {\n      console.error('Reset error:', error);\n      setMessage('Password reset failed. Please try again later.');\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // Reset password form with email, password, and confirm password input fields\n    _jsxDEV(\"div\", {\n      className: \"reset-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"reset-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email address\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Create a password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm your password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/register\",\n            children: \"Register here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Reset, \"6n5aAVAAiFqlSLYZZOc4gzGRGYo=\", false, function () {\n  return [useNavigate];\n});\n_c = Reset;\nexport default Reset;\nvar _c;\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Reset","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","navigate","handleSubmit","e","preventDefault","userData","response","post","status","setTimeout","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","href","_c","$RefreshReg$"],"sources":["C:/Users/rugog/Documents/CoDeAnDpRoJeCtS/Nathan-Rugo/Trafiri/trafiri/src/components/Reset.js"],"sourcesContent":["// Reset password component that allows users to reset their password by providing their email address and new password. \r\n// The component sends a POST request to the server with the email and password, and if the request is successful, the user is redirected to the login page. \r\n// If the request fails, an error message is displayed.\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Reset = () => {\r\n  // State variables to store the user's email, password, and confirm password values, as well as the message to display to the user\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n  // Function to handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check if passwords match\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n      return;\r\n    }\r\n    // User data to send to the server\r\n    const userData = {\r\n      email,\r\n      password,\r\n    };\r\n\r\n    try {\r\n      // Send reset request to server\r\n      const response = await axios.post('http://localhost:3001/reset', userData);\r\n\r\n      if (response.status === 200) {\r\n        setMessage('Password reset successful');\r\n        setTimeout(() => {\r\n          navigate('/login');\r\n        }, 2000); // Redirect after 2 seconds\r\n      } else {\r\n        setMessage(`Password reset failed: ${response.data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Reset error:', error);\r\n      setMessage('Password reset failed. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    // Reset password form with email, password, and confirm password input fields\r\n    <div className=\"reset-container\">\r\n      <h1>Reset Password</h1>\r\n      {message && <p className=\"reset-message\">{message}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Email</label>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter your email address\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Create a password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <label>Confirm Password</label>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm your password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n        <p>Don't have an account? <a href=\"/register\">Register here</a></p>\r\n      </form>\r\n      \r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reset;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}